#!/bin/bash

set -e

function update_one {
  local url=$(echo $1 | cut -d'#' -f 1)
  local branch=$(echo $1 | cut -d'#' -sf 2)
  local name=${url##*/}

  if [ -e "$name" ]; then
    (
    cd $name
    if [ -z "$(git status --porcelain)" ]; then
      echo updating $name
      git -c color.ui=always pull
    else
      echo fetching $name
      git -c color.ui=always fetch
    fi
    )
  else
    git clone $url $name
    if [ -n "$branch" ]; then
      (cd $name && git checkout $branch)
    fi
  fi
}
export -f update_one

function install_dependencies {
  local url=$(echo $1 | cut -d'#' -f 1)
  local branch=$(echo $1 | cut -d'#' -sf 2)
  local name=${url##*/}

  if [ -e "$name" ]; then
    (
    cd $name
    echo "Installing dependencies for $name"
    [ -e .ruby-version ] && rbenv install --skip-existing || true
    [ -e Gemfile ] && bundle --jobs 8 || true
    [ -e yarn.lock ] && yarn install --check-files || true
    [ -e package-lock.json ] && npm install || true
    )
  else
    echo "$name doesn't exist"
  fi
}
export -f install_dependencies

function main {
  parallel update_one < repos.txt
  # this can't run in parallel
  cat repos.txt | while read url; do install_dependencies $url; done
}

main
