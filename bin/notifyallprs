#!/bin/zsh -il

set -e
# TODO: update the last message if it's still "visible"

#-F q="is:open" \
#-F sort=created \
#-F per_page=100 \
response="$HOME/.cache/notifypr_response"
curl -sSL -H "Authorization: token $GITHUB_TOKEN" \
  -H "Accept: application/vnd.github.v3+json" \
  -o $response \
  "https://api.github.com/search/issues?q=is:open+is:pr+user:promoteinternational+draft:false+-status:failure"

curl -sSL -H "Authorization: token $GITHUB_TOKEN" \
  -H "Accept: application/vnd.github.v3+json" \
  -o ${response}_failed \
  "https://api.github.com/search/issues?q=is:open+is:pr+user:promoteinternational+draft:false+status:failure+updated:>=$(date +'%Y-%m-%d')"

curl -sSL -H "Authorization: token $GITHUB_TOKEN" \
  -H "Accept: application/vnd.github.v3+json" \
  -o ${response}_merged \
  "https://api.github.com/search/issues?q=is:merged+is:pr+user:promoteinternational+draft:false+merged:>=$(date +'%Y-%m-%d')"

prs=$(cat $response | jq -r ".items[] | [.title, .html_url, .user.login, .created_at, .updated_at, .closed_at] | @csv")
prs_failed=$(cat ${response}_failed | jq -r ".items[] | [.title, .html_url, .user.login, .created_at, .updated_at, .closed_at] | @csv")
prs_merged=$(cat ${response}_merged | jq -r ".items[] | [.title, .html_url, .user.login, .created_at, .updated_at, .closed_at] | @csv")


notify="@here "
notify=" "
recipient="$SLACK_DEVSTATUS"
recipient="$SLACK_MAIN_FLOW"
content="<https://github.com/pulls?q=is%3Aopen+is%3Apr+user%3Apromoteinternational+draft%3Afalse+-status%3Afailure|current open pr's> $notify (excluding drafts)"
while read pr; do
  title=$(echo $pr | cut -d',' -f1 | sed 's/"//g')
  url=$(echo $pr | cut -d',' -f2 | sed 's/"//g')
  user=$(echo $pr | cut -d',' -f3 | sed 's/"//g')
  created_at=$(echo $pr | cut -d',' -f4 | sed 's/"//g')
  updated_at=$(echo $pr | cut -d',' -f5 | sed 's/"//g')
  closed_at=$(echo $pr | cut -d',' -f6 | sed 's/"//g')

  hours_ago=$(echo $((($(date +"%s")-$(date +"%s" -d "$created_at"))/60/60)))
  title=$(echo $title | sed -E 's{(.*\] |)(.*){\1<'$url'|\2>{')
  title=$(echo $title | sed -E 's{\[#([[:digit:]]+)\]{<https://www.pivotaltracker.com/n/projects/'$PT_PROJECT_ID'/stories/\1/|[#\1]>{')

  content="$content%0A:open: $title (created ${hours_ago}h ago by $user)"
done <<< $prs

if [ "$(echo $prs_failed | wc -l)" -gt 1 ]; then
  content="$content%0A%0Arecently failing pr's"
  while read pr; do
    title=$(echo $pr | cut -d',' -f1 | sed 's/"//g')
    url=$(echo $pr | cut -d',' -f2 | sed 's/"//g')
    user=$(echo $pr | cut -d',' -f3 | sed 's/"//g')
    created_at=$(echo $pr | cut -d',' -f4 | sed 's/"//g')
    updated_at=$(echo $pr | cut -d',' -f5 | sed 's/"//g')
    closed_at=$(echo $pr | cut -d',' -f6 | sed 's/"//g')
  
    hours_ago=$(echo $((($(date +"%s")-$(date +"%s" -d "$updated_at"))/60/60)))
    title=$(echo $title | sed -E 's{(.*\] |)(.*){\1<'$url'|\2>{')
    title=$(echo $title | sed -E 's{\[#([[:digit:]]+)\]{<https://www.pivotaltracker.com/n/projects/'$PT_PROJECT_ID'/stories/\1/|[#\1]>{')
  
    content="$content%0A:octagonal_sign: $title (updated ${hours_ago}h ago by $user)"
  done <<< $prs_failed
fi

if [ "$(echo $prs_merged | wc -l)" -gt 0 ]; then
  content="$content%0A%0Arecently merged pr's"
  while read pr; do
    title=$(echo $pr | cut -d',' -f1 | sed 's/"//g')
    url=$(echo $pr | cut -d',' -f2 | sed 's/"//g')
    user=$(echo $pr | cut -d',' -f3 | sed 's/"//g')
    created_at=$(echo $pr | cut -d',' -f4 | sed 's/"//g')
    updated_at=$(echo $pr | cut -d',' -f5 | sed 's/"//g')
    closed_at=$(echo $pr | cut -d',' -f6 | sed 's/"//g')
  
    hours_ago=$(echo $((($(date +"%s")-$(date +"%s" -d "$created_at"))/60/60)))
    closed_ago=$(echo $((($(date +"%s")-$(date +"%s" -d "$closed_at"))/60/60)))
    title=$(echo $title | sed -E 's{(.*\] |)(.*){\1<'$url'|\2>{')
    title=$(echo $title | sed -E 's{\[#([[:digit:]]+)\]{<https://www.pivotaltracker.com/n/projects/'$PT_PROJECT_ID'/stories/\1/|[#\1]>{')
  
    # TODO: who merged it, it's not included in the current api request
    content="$content%0A:merge: $title (created ${hours_ago}h ago by $user, merged ${closed_ago}h ago)"
  done <<< $prs_merged
fi

echo "$content" | sed 's/%0A/\n/g'
curl -d "token=${SLACK_PROMOTEINT_TOKEN}" -d "channel=$recipient" -d "as_user=true" -d "link_names=true" --data-binary "text=${content}" https://slack.com/api/chat.postMessage
