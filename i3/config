# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

# refer to ~/.Xmodmap for keycode/keybinds
# Mod1 = Alt, Mod4 = Super/Win
set $mod Mod4
set $term alacritty
set $simple_term st
set $simple_term_dev ~/code/st/st

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, if you need a lot of unicode glyphs or
# right-to-left text rendering, you should instead use pango for rendering and
# chose a FreeType font, such as:
font pango:Ubuntu Mono 12

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# screen outputs
bindsym $mod+ctrl+mod1+shift+1 exec --no-startup-id slayout 1
bindsym $mod+ctrl+mod1+shift+2 exec --no-startup-id slayout 2
bindsym $mod+ctrl+mod1+shift+3 exec --no-startup-id slayout 3
bindsym $mod+ctrl+mod1+shift+4 exec --no-startup-id slayout 4
bindsym $mod+ctrl+mod1+shift+0 exec --no-startup-id slayout 0

# start a terminal
bindsym $mod+Return exec $simple_term_dev -e /bin/sh -i -c tmux
bindsym $mod+shift+Return exec $term
bindsym $mod+ctrl+Return exec $simple_term_dev -e /bin/zsh -i -c "remote 31"
bindsym $mod+ctrl+shift+Return exec $simple_term_dev -e /bin/zsh -i -c "remote 31 -A"
# emergency shell
bindsym $mod+shift+BackSpace exec st -e /bin/sh

# kill focused window
bindsym $mod+Shift+q kill
bindsym --whole-window $mod+button2 kill

# start dmenu (a program launcher)
bindsym $mod+e exec dmenu_choose_type -l 20
bindsym $mod+shift+e exec dmenu_run -l 40
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+e exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+t splith

# split in vertical orientation
bindsym $mod+r splitv

# enter fullscreen mode for the focused container
bindsym $mod+z fullscreen

bindsym $mod+shift+z bar mode toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+x layout stacking
bindsym $mod+c layout tabbed
bindsym $mod+v layout splitv
bindsym $mod+b layout splith

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
bindsym $mod+ctrl+Shift+space sticky toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+w focus child

bindsym $mod+ctrl+h exec wat

# keycodes: 60 = ., 61 = -
bindsym $mod+n workspace next_on_output
bindsym $mod+p workspace prev_on_output
# todo: doesn't support move + (next|prev)_on_output
# it should probably create a new workspace; next_free_on_output
#bindsym $mod+shift+n move container next_on_output
#bindsym $mod+shift+p move container prev_on_output
bindcode $mod+61 focus output right
bindcode $mod+Shift+61 move container to output right
bindcode $mod+ctrl+61 move workspace to output right
bindcode $mod+60 workspace back_and_forth

workspace_auto_back_and_forth yes

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+t exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# 48 = ä
# 49 = §
#bindcode 49 exec --no-startup-id click_w

# This prevents most keyboard binds to be consumed,
#   allows using i3 in a container like Xnest or Xephyr
mode "nested" {
  bindsym $mod+shift+a mode "default"
  #bindsym $mod+shift+s exec --no-startup-id Xephyr -br -ac -noreset -screen 1920x1080 :2
  bindsym $mod+shift+s exec --no-startup-id nested
}
bindsym $mod+shift+a mode "nested"

mode "automate1" {
  bindsym Up exec --no-startup-id screenshot;
  #bindsym Left exec --no-startup-id xdotool mousemove 130 750 click 1 sleep 1.5 mousemove 920 650 click 1 sleep 2 mousemove 250 250 click 1 sleep 1 click 1 sleep 1 click 1
  #bindsym Right exec --no-startup-id xdotool mousemove 266 750 click 1 
  # 1920x1080
  bindsym Left exec --no-startup-id xdotool mousemove 243 1050 mousedown 1 sleep 0.2 mouseup 1 sleep 1.5 mousemove 1650 900 mousedown 1 sleep 0.2 mouseup 1 sleep 2 mousemove 468 351 mousedown 1 sleep 0.2 mouseup 1 sleep 1 mousedown 1 sleep 0.2 mouseup 1 sleep 1 mousedown 1 sleep 0.2 mouseup 1
  bindsym Right exec --no-startup-id xdotool mousemove 498 1050 mousedown 1 sleep 0.2 mouseup 1

  bindsym Escape mode "default"
}

mode "automate2" {
  bindsym c exec auto_getlocation
  #bindsym g exec auto_click
  #bindsym t exec pkill -9 auto_click
  bindsym g exec auto_click_2

  bindsym Escape mode "default"
}
bindsym $mod+shift+b mode "automate2"

# resize window (you can also use the mouse for that)
mode "resize" {
        bindsym h resize shrink width 20 px or 10 ppt; move up 10
        bindsym j resize grow height 20 px or 10 ppt; move down 10
        bindsym k resize shrink height 20 px or 10 ppt; move down 10
        bindsym l resize grow width 20 px or 10 ppt; move left 10

        bindsym shift+Left  move left 10
        bindsym shift+Down  move down 10
        bindsym shift+Up    move up 10
        bindsym shift+Right move right 10
        bindsym Left        resize shrink width 10 px or 10 ppt
        bindsym Down        resize grow height 10 px or 10 ppt
        bindsym Up          resize shrink height 10 px or 10 ppt
        bindsym Right       resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindcode $mod+20 mode "resize"
bindcode $mod+21 exec xdotool getactivewindow windowsize 96% 92% windowmove 2% 5%

# application keybindings

# keycodes: 20 = +, 35 = ~, 49 = `, 34 = å, 48 = ä, 47 = ö, 61 = -
bindcode $mod+35 scratchpad show
bindcode $mod+49 move scratchpad

# tmux keybinds
bindsym $mod+ctrl+Mod1+m exec --no-startup-id bash -i -c 'initialize'

bindsym $mod+y [title="tmux_dict"] scratchpad show
bindsym $mod+shift+y exec --no-startup-id $term -t tmux_dict -e bash -i -c 'mux dict'

bindsym $mod+u [title="^Telegram"] scratchpad show
bindsym $mod+shift+u exec telegram-desktop
for_window [title="^Telegram"] move scratchpad
for_window [title="^Telegram"] focus; floating enable; resize grow width 200px; resize grow height 100px; move left 200px; move up 100px

bindsym $mod+i [title="tmux_inbox"] scratchpad show
bindsym $mod+shift+i exec --no-startup-id $term -t tmux_inbox -e zsh -i -c 'mux inbox'
# TODO: verify tmux works properly for this
# bindsym $mod+ctrl+shift+i exec --no-startup-id $term -t tmux_inbox -e bash -i -c 'ssh server -t "tmux attach -t inbox"'

bindsym $mod+o [title="tmux_pomo"] scratchpad show
bindsym $mod+shift+o exec --no-startup-id $term -t tmux_pomo -e zsh -i -c 'mux pomo'

bindsym $mod+m [title="tmux_invoker"] scratchpad show
bindsym $mod+shift+m exec --no-startup-id $term -t tmux_invoker -e zsh -i -c 'mux invoker'

for_window [title="tmux_.*"] move scratchpad
for_window [title="qute_editor"] floating enable

bindsym $mod+ctrl+space exec i3-input -F 'exec investigate "%s"' -P 'Investigate: '

bindsym $mod+ctrl+n exec i3-input -F 'exec i3-msg rename workspace to "%s"' -P 'Rename Workspace: '
bindsym $mod+ctrl+m exec i3-input -F 'exec xdotool getactivewindow set_window --name="%s"' -P 'Rename Window: '
bindsym $mod+ctrl+o exec i3-input -F "exec gluj %s && killall -USR1 i3status && gluj_push" -P 'Glucose: '

bindsym $mod+g exec ink
bindsym $mod+shift+g exec $simple_term -t editlinks -e zsh -i -c "vim ~/code/sparkleshare/links.wofl -c 'set nofoldenable'"

#bindcode $mod+34 [title="^run "] scratchpad show
#bindcode $mod+48 [title="^glucose "] scratchpad show

# 47 = ö
bindcode $mod+ctrl+47 exec --no-startup-id $simple_term -e bash -i -c 'mmb'
bindcode $mod+Mod1+47 exec --no-startup-id $simple_term -e bash -i -c 'mmb off'

# cmus replaces _NET_WM_NAME
bindcode $mod+47 [class="st-256color" title="(^cmus |.ogg$)"] scratchpad show
bindcode $mod+shift+47 exec --no-startup-id $simple_term -t cmus -e bash -i -c 'cmus'
for_window [class="st-256color" title="^cmus"] move scratchpad

for_window [title="feh.*/srv/http/munin"] floating enable
for_window [title="^lynx_feh - .*"] floating enable
for_window [title="^editconf$"] focus; floating enable; resize grow width 400px; resize grow height 400px; move left 200px; move up 200px
for_window [title="^editlinks$"] focus; floating enable; resize grow width 400px; resize grow height 600px; move left 200px; move up 200px

# acpilight
bindsym XF86MonBrightnessUp   exec xbacklight +10
bindsym XF86MonBrightnessDown exec xbacklight -10
bindsym XF86AudioRaiseVolume  exec pactl set-sink-volume @DEFAULT_SINK@ +10% && killall -USR1 i3status
bindsym XF86AudioLowerVolume  exec pactl set-sink-volume @DEFAULT_SINK@ -10% && killall -USR1 i3status
bindsym XF86AudioMute         exec pactl set-sink-mute @DEFAULT_SINK@ toggle && killall -USR1 i3status
# bindsym XF86AudioRaiseVolume exec amixer -q set Master 2dB+ unmute && killall -USR1 i3status
# bindsym XF86AudioLowerVolume exec amixer -q set Master 2dB- unmute && killall -USR1 i3status
# bindsym XF86AudioMute exec amixer -q set Master toggle && killall -USR1 i3status
bindsym Print	              exec screenshot
bindsym --release Shift+Print           exec screenshot -s

bindsym $mod+Print exec $simple_term -t shot_viewer -e zsh -i -c 'view_shots'
for_window [title="shot_viewer"] fullscreen

bindsym $mod+Pause exec sleep 0.1 && xset dpms force off
bindsym $mod+shift+Pause exec sleep 0.5 && xset dpms force off && slock
bindsym $mod+shift+F12 exec sleep 0.5 && xset dpms force off && slock

bindsym XF86AudioPlay exec cmus-remote -u
# This is a great workaround to pause stuff like youtube
#bindsym XF86AudioPlay exec /home/flugsio/bin/pause
bindsym XF86AudioStop exec cmus-remote -s
bindsym XF86AudioPrev exec cmus-remote -r
bindsym XF86AudioNext exec cmus-remote -n
bindsym XF86AudioPause exec cmus-remote -u

bindcode $mod+112  exec /usr/bin/pulseaudio-ctl up
bindcode $mod+117  exec /usr/bin/pulseaudio-ctl down

bindsym $mod+ctrl+v exec browse_clipboard

default_border pixel 1
default_floating_border pixel 1
hide_edge_borders both

# workaround weird issue, chromium doesn't get default border
for_window [class="Chromium"] border pixel 1

for_window [class="Surf"] border normal

for_window [title="QUAKE LIVE Launcher" class="Wine"] floating enable
for_window [title="Quake Live" class="Wine"] floating enable
for_window [title="quakelive.exe" class="Wine"] floating enable
for_window [title="Only If"] floating enable
for_window [title="RaceTheSun"] floating enable
for_window [title="MiniMetro"] floating enable
for_window [title="Evoland"] floating enable
for_window [title="FarmingSimulator2015"] floating enable
for_window [title="Particulars"] floating enable
for_window [title="DeathTrap"] floating enable
for_window [title="Safecracker"] floating enable
for_window [workspace=10] floating enable

for_window [title="VirtualBox$"] floating enable, workspace 10
#assign [title="feh"] 10

for_window [class="Pavucontrol"] floating enable, sticky enable, resize set 600px 440px, move position 1960px 21px
for_window [class="Xephyr"] move position 0px 21px, border none

for_window [title=".*is sharing your screen."] move position 350px -35px

# color defines for zenburn styled i3
set $bg     #2c2c2e
set $bg2    #1c1c1e
set $fg     #9f9f9f
set $hi     #efef8f
set $ac     #a0afa0
set $tx     #040404
set $ia     #8f8f8f
set $be     #8faf9f
set $yw     #ccdc90
set $gn     #88b090
set $rd     #e89393

set $base3   #002b36
set $base2   #073642
set $base1   #586e75
set $base0   #657b83
set $base00  #839496
set $base01  #93a1a1
set $base02  #eee8d5
set $base03  #fdf6e3
set $yellow  #b58900
set $orange  #cb4b16
set $red     #dc322f
set $magenta #d33682
set $violet  #6c71c4
set $blue    #268bd2
set $cyan    #2aa198
set $green   #859900
set $green2  #417c08
set $green3  #79a163
set $tmux_base2 #232323
set $tmux_orange #d75f00
set $tmux_yellow #b58900
set $tmux_orange_middle #885500
set $tmux_orange_dark #663300

# set some nice colors      border     background  text
client.focused              $bg2        $green2         $base02
client.unfocused            $bg        $bg         $ia
client.focused_inactive     $tmux_base2        $tmux_base2         $ac
client.urgent               $green2    $green2         $base02



# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status | i3status_wrapper
        position top
        font pango:Ubuntu Mono 12

        colors {
                background          $bg2
	        statusline          $fg
	        separator           $green
	        focused_workspace   $bg2        $bg2        $green2
	        active_workspace    $gn        $ac        $tx
	        inactive_workspace  $bg2        $bg2        $ia
	        urgent_workspace    $green2        $green2        $base02
        }
}

# xrandr --output DP1 --mode 2560x1440 --fb 1920x1080 --transform 1,0,-320,0,1,0,0,0,1 --panning 0x0
#bar {
#        status_command i3status | i3status_wrapper
#        position bottom
#        font pango:Ubuntu Mono 264
#
#        colors {
#                background          $bg2
#	        statusline          $fg
#	        separator           $green
#	        focused_workspace   $bg2        $bg2        $green2
#	        active_workspace    $gn        $ac        $tx
#	        inactive_workspace  $bg2        $bg2        $ia
#	        urgent_workspace    $green2        $green2        $base02
#        }
#}

#bindsym $mod+shift+p bar hidden_state toggle bar_help

#bar {
#  id bar_help
#  position bottom
#  mode hide
#  hidden_state hide
#  tray_output none
#  workspace_buttons yes
#  binding_mode_indicator no
#  Modifier Mod2 # unused modifier
#}

exec_always ~/bin/kbd

# These are really buggy, only meant for testing
#fake-outputs 1920x1080+0+0,640x1080+1920+0,2560x360+0+1080
#fake-outputs 2560x1440+0+0
#fake-outputs 1920x1080+0+0
