#!/bin/bash

# https://www.pivotaltracker.com/help/api/rest/v5#Endpoints
# https://www.pivotaltracker.com/help/api/rest/v5#Story

set -e

function task_property {
  task "$1" export | jq ".[] .$2 // empty" -r
}
config="$HOME/.config/story"
tmp=$(mktemp --suffix=.md)

last_development_backlog="171604085" # design starts
before_id=""
labels=""
owner_ids="[]"
current_state="\"unscheduled\""
estimate="null"
template=""

if [ "$1" = "--help" ]; then
  echo "1st argument template: bug|security|chore|errbit|(blank=feature)"
  echo "2nd argument schedule: soon|now|(blank)"
fi

if [ "$1" = "bug" ]; then
  # TODO: use another template
  template=$config/bug_template
  story_type="bug"
  shift
elif [ "$1" = "security" ]; then
  template=$config/security_template
  story_type="chore"
  labels="\"security\",\"security from sprint 7\",\"upgrade\",\"technical\""
  shift
elif [ "$1" = "chore" ]; then
  template=$config/chore_template
  story_type="chore"
  shift
else
  template=$config/story_template
  story_type="feature"
fi

if [ "$1" = "now" ]; then
  now=1
  shift
fi

set -x
if [ -n "$1" ]; then
  id="$1"
  initial=$(task_property "$id" description)
  initial_pt_description=$(task_property "$id" pivotaldescription)
  initial_pt_story_type="$(task_property "$id" pivotalstorytype)"
  task_id="$id"
  if [ -n "$initial_pt_story_type" ]; then
    story_type=$initial_pt_story_type
  fi
fi

echo "$initial" > $tmp

if [ -n "$initial_pt_description" ]; then
  unset template
  echo >> $tmp
  echo "$initial_pt_description" >> $tmp
elif [ -e "$template" ]; then
  cat $template >> $tmp
fi

vim $tmp

if [ "$now" = "1" ]; then
  current_state="\"planned\""
  # this label conveys it was injected into current sprint
  # unclear if bonus and urgent is really is the same,
  # urgent was meant for technical work that couldn't wait,
  # bonus is a good name for "extra features" though
  extra_label="bonus"
  if [ -n "$labels" ]; then
    labels="$labels,\"${extra_label}\""
  else
    labels="\"${extra_label}\""
  fi
  owner_ids="[1812784]"
  if [ "$story_type" = "bug" ]; then
    estimate="2"
  elif [ "$story_type" = "security" ]; then
    estimate="1"
  elif [ "$story_type" = "chore" ]; then
    estimate="1"
  elif [ "$story_type" = "feature" ]; then
    estimate="2"
  fi
else
  current_state="\"unstarted\""
  # if [ "$story_type" = "feature" ] || [ "$story_type" = "bug" ]; then
    before_id="$last_development_backlog"
  # else
    # before_id="$last_technical_backlog"
  # fi
fi

extra_label=$(echo -e "needs grooming\ntechnical\nsecurity\ncc\ngud\nfetch" | fzf --prompt "Extra label? (CTRL-C to cancel)" || echo "")

if [ -n "$extra_label" ]; then
  if [ -n "$labels" ]; then
    labels="$labels,\"${extra_label}\""
  else
    labels="\"${extra_label}\""
  fi
fi

name=$(head -n 1 $tmp | sed 's/"/\\"/g')
description=$(tail -n +2 $tmp | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')

#-d "{\"name\":\"$name\",\"description\":\"$description\",\"labels\":[$labels]}" \
data="\"name\":\"$name\",\"description\":\"$description\",\"story_type\":\"$story_type\",\"labels\":[$labels],\"current_state\":$current_state,\"owner_ids\":$owner_ids,\"estimate\":$estimate"

if [ -n "$before_id" ]; then
  data="$data,\"before_id\":$before_id"
fi

if [ -n "$name" ]; then
  set -x
  response=$(curl -X POST -H "X-TrackerToken: $PT_TOKEN" \
    -H "Content-Type: application/json" \
    -d "{$data}" \
    "https://www.pivotaltracker.com/services/v5/projects/$PT_PROJECT_ID/stories" | jq .)
  pt_id=$(echo $response | jq .id)
  if [ -n "$task_id" ] && [ -n "$pt_id" ]; then
    task modify "$task_id" pivotalid:$pt_id rc.recurrence.confirmation=no
  fi
else
  echo "Aborted due to missing story name"
  echo "Filename: $tmp"
fi
