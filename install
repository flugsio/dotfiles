#!/bin/bash

DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]]; then DIR="$PWD"; fi
source "$DIR/common"

function main {
  create_all_links
  install_vundles
}

function create_all_links {
  link_file ackrc
  link_file agignore
  link_file bash_aliases
  link_file bin bin
  link_file config/lynx
  link_file config/qutebrowser/qutebrowser.conf
  link_file config/qutebrowser/keys.conf
  link_file config/alacritty/alacritty.yml
  link_file config/gtk-3.0/gtk.css
  link_file config/dunst/dunstrc
  link_file config/nvim/init.vim
  link_file config/ctags/ignore.ctags
  link_file config/ctags/scala.ctags
  link_file config/ctags/RSpec.ctags
  link_file gitconfig
  link_file gitignore
  link_file i3
  link_file lynxrc
  link_file surf.css
  link_file tmuxinator
  link_file toprc
  link_file vim
  link_file vimrc
  link_file xinitrc
  link_file Xmodmap
  link_file Xmodmap_keys
  link_file Xresources
  link_file zshrc
  link_file zsh_theme
  link_file rbenv_init
  link_file df_interface.txt .dwarffortress/data/init/interface.txt

  link_override i3status .conf
  link_override tmux .conf
  link_override tmux.weechat .conf

  [ -d ~/code/ansible ] && copy_file vtools/traprack code/ansible/vtools/traprack

  #  sudo cp ~/code/dotfiles/slash/sv-code.map /usr/share/X11/xkb/symbols
}

function install_vundles {
  vundle_path="$HOME/.vim/bundle/Vundle.vim"
  if [ ! -e "$vundle_path" ]; then
    git clone https://github.com/gmarik/Vundle.vim.git $vundle_path
    sed -ir 's/\(git clone\)\( --recursive\)/\1 --depth 1\2/' vim/bundle/Vundle.vim/autoload/vundle/installer.vim
  fi
  # TODO: only quit unless there was errors
  vim -c VundleInstall -c qa
  # change branches manually
  (cd ~/.vim/bundle/fzf.vim && git fetch origin add-git-files-modified:add-git-files-modified && git checkout add-git-files-modified)
}

main

