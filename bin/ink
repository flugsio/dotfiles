#!/bin/bash

# this handles wofl-style files like this
# * use indented
#   * nesting 
#     | link.com

prefix=${LINKS_STORE_DIR-~/code/sparkleshare}
#links=$(cat "$prefix"/links.wofl | egrep "https?://" | sed -r "s/^ +\| //" | sed -r "s/ #.*$//")
links=$(cat "$prefix"/links.wofl | awk '/^\*/{a=$0}  /^ {2}\*/{b=$0}  /^ {4}\*/{c=$0}  /^ {6}\*/{d=$0}  /^ {2}\|/{print a,$0}  /^ {4}\|/{print a,b,$0}  /^ {6}\|/{print a,b,c$0}  /^ {8}\|/{print a,b,c,d,$0} ' | sed -r 's/ +[*|]/ ::/g')

link=$(printf '%s\n' "${links[@]}" | dmenu -i -l 20 "$@")

link=$(echo "$link" | sed 's/.*:: //')
url=$(echo "$link" | sed 's/ .*//')
extra=$(echo "$link" | sed 's/^[^ ]*//')

echo link: -$link-
echo url: -$url-
echo extra: -$extra-

[[ -n $url ]] || exit

if [[ "$url" == "https://github.com/avidity"* ]]; then
  chromium --new-window "$url"
elif [[ "$url" == "https://github.com/pulls"* ]]; then
  chromium --new-window "$url"
elif [[ "$extra" == *"#main"* ]]; then
  chromium --new-window "$url"
else
  qutebrowser "$url" --target window &
fi
